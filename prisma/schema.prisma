// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DEV_DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email        String
  passwordHash String
  tokenVersion Int    @default(0)
  bodyWeight   Int?

  exercises Exercise[]
  workouts  Workout[]
}

model Workout {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  exercise Exercise[]
  user     User       @relation(fields: [userId], references: [id])
  userId   String     @db.ObjectId
}

model Exercise {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String
  description   String
  currentWeight Int?
  targetWeight  Int?

  entries   Entry[]
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  workout   Workout? @relation(fields: [workoutId], references: [id])
  workoutId String?  @db.ObjectId
}

model Entry {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes String

  sets       Set[]
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String   @db.ObjectId
}

model Set {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())

  reps      Int
  // For machine / body weights
  weight    Int?
  // For cardio
  distance  Int?
  intensity Int?
  isCurrent Boolean @default(false)

  entry   Entry  @relation(fields: [entryId], references: [id])
  entryId String @db.ObjectId
}
